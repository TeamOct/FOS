plugins {
    id "com.github.nekit508.mindustry-mod-plugin" version "$nmpVersion" apply true
}

allprojects.each { project ->
    project.repositories {
        mavenCentral()
        mavenLocal()
        maven { url "https://raw.githubusercontent.com/Zelaux/MindustryRepo/master/repository" }
        maven { url "https://www.jitpack.io" }
    }

    project.apply plugin: "java"

    /*project.sourceSets.main.java.srcDirs = ["src"]
    project.sourceSets.main.resources.srcDirs = ["res"]*/
}

apply plugin: "java-library"
apply plugin: "maven-publish"

nmp.core project, "core"
nmp.entityAnno project, "eanno", core

group = modGroup
version = modVersion

core.configure {
    genericModInit()

    core.configureTasks {
        nmpGenerateModInfo { task ->
            task.set(
                    "displayName": "Fictional Octo System",
                    "description": "FOS is a large-scale mod with a campaign that contains a brand-new solar system and unique mechanics.",
                    "author": "Team Oct",
                    "subtitle": "See you later!",
                    "repo": "TeamOct/FOS",
                    "java": true,
                    "main": "fos.core.FOSMod",
                    "hidden": false
            )
        }
    }
    tasks.nmpBuild.from project.file("mod.json")
    tasks.nmpBuild.from project.file("icon.png")

    dependencies{
        implementation "com.github.liplum:MultiCrafterLib:$multiCrafterLibVersion"
        compileOnly nmp.arcDependency(mindustryVersion.get(), "discord")
        compileOnly nmp.arcDependency(mindustryVersion.get(), "backend-sdl")
    }
}

core.settings {
    modName.set gameModName
    modGroup.set group as String
    modVersion.set version as String

    mindustryVersion.set prop("mindustryVersion") as String

    generateModInfo.set true
}

eanno.settings {
    genPackage.set modGen
    modCompsPackage.set modComps
    fetchedCompsPackage.set fetchedComps

    entityAnnoVersion.set prop("entityAnnoVersion") as String
}

eanno.configure {
    genericInit()
}